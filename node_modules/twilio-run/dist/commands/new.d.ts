import { Arguments, Argv } from 'yargs';
import { AllAvailableFlagTypes, BaseFlagNames } from '../flags';
import { ExternalCliOptions } from './shared';
import { CliInfo } from './types';
export declare type ConfigurableNewCliFlags = Pick<AllAvailableFlagTypes, BaseFlagNames | 'template'>;
export declare type NewCliFlags = Arguments<ConfigurableNewCliFlags & {
    namespace?: string;
}>;
export declare type NewConfig = NewCliFlags;
export declare function handler(flagsInput: NewCliFlags, externalCliOptions?: ExternalCliOptions): Promise<void>;
export declare const cliInfo: CliInfo;
declare function optionBuilder(yargs: Argv<any>): Argv<NewCliFlags>;
export declare const command: string[];
export declare const describe = "Creates a new Twilio Function based on an existing template";
export declare const builder: typeof optionBuilder;
export {};
